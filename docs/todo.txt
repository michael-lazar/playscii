TODO

identify bugs with current undo/redo and squash the must-fix ones!

fix unexpected result cases for current paint/erase tool behaviors

PNG export:
- 1:1 offscreen render target size = charset char size * art size; quad size = render target size / art size
-- CRT off/on just runs the same post-proc shader or not?
- determine if current CRT shader meets visual quality standard for PNG export.  CRT on/off setting respected in exported art.
- lead on aniGIF export: http://compgroups.net/comp.lang.python/save-animated-gif-in-python-image-library/1632384

main popup
- "use global settings" toggle for tools with an "affects X" mask - when true, setting one of the current tool's masks changes all tool's masks
- arrow keys navigate pickers as well as mouse?
-- how to resolve 

ability to toggle between perspective and ortho views (steal unity's cool lerp?)

ability to "pin" popup so it stays on screen always

later UI stuff in docs/ui.txt

---

FIX:

status bar breaks when UI scale changes!

little annoying cracks between quads - UV or vert/element error?
possible lead: http://gamedev.stackexchange.com/questions/76230/how-to-remove-seams-from-a-tile-map-in-3d

rewrite Cursor.screen_to_world to produce same results as gluUnProject:
https://www.opengl.org/wiki/GluProject_and_gluUnProject_code
https://www.opengl.org/sdk/docs/man2/xhtml/gluUnProject.xml

low priority:

- headbrain2.ed is corrupted, figure out if it can be salvaged with smart parsing - maybe provide a "width override" option?

problem discovered during 2015-01-04~06:
GLSL really can't handle int/uint attributes!  charIndex looks fine in numpy int32 array data but comes into GLSL totally screwy.  works fine when the array and attribute are floats instead.  bug for PyOpenGL devs?
possible test program: two quads side by side, each doing some trivial shader that involves an arbitrary number, only difference being one is driven by an int attribute and the other by a float.
