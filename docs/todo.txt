TODO

- file open operations (art, palette, charset) should look in currently loaded game folder as well as app-level dirs

move cronotest starting state to a hand-made state file, class defs into cronotest/
(folder structure?)

sorting: is basing sort entirely on Y position sufficient?
- split cronotest1 scene into multiple objects if need be: bannister, bed, front wall
- "y_sort" property, if true then an object's Y determines its sort order
- all non-y_sort objects draw first, then all y sort objects in order of Y: lower (in world space) = drawn later

collision:
- debug viz for contacts (create on contact start, destroy on contact end)
- fix player->static collisions - shouldn't jitter
- fix player->dynamicBB collisions

edit mode:

- "state saves" - save and reset on the fly for easy iteration and testing
-- use importlib to dynamically import modules based on what's in JSON, set right path with os.chdir(relative_path), save starting path out via os.getcwd()
-- Class.__module__ to get module name, importlib.reload() to reload if already loaded
--- for c in classes_loaded: if c.__name__ == [string of class name from JSON]: c()
-- .gs file = JSON of serialized game object properties, setattr'd after they're init'd
--- each gameobject subclass has a "serialized" list of string names of properties to serialize (weak refs should be avoided for this obvs)
-- saving a game state doesn't modify object definitions, but object definitions are reloaded every time game state is reloaded
- rename SelectedObjectLabel to ObjectPropertiesPanel, dock with left edge of screen
- generic properties window to edit a selected instance's properties?

---

further work on existing features:

menu bar - when alt pressed, grey/darker bg on character that is an item's accelerator

PNG export:
- CRT off/on affects PNG output, according to a scale factor.
-- arg 1 of export console command = scale factor override, default is Nx
- aniGIF export for animations - lead: http://compgroups.net/comp.lang.python/save-animated-gif-in-python-image-library/1632384

main popup
- "use global settings" toggle for tools with an "affects X" mask - when true, setting one of the current tool's masks changes all tool's masks
- ability to "pin" popup so it stays on screen always
- arrow keys navigate between char and color pickers properly

shift-O: toggle between perspective and ortho views (steal unity's cool lerp)

human-readable errors if charset/palette not found

if psci files get too huge, compress em with python's zipfile module (different extension needed?) as the json zips extraordinarily well

mockup for frame/layer matrix - is this still needed now that onion skin + layer pulldown list give a pretty good-enough view of this data?

should game dirs have their own palettes/, charsets/ etc subdirs?
