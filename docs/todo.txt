TODO

for 0.8.0:

collision issues to investigate:
- player gets hung up on boundaries between AABBs in maze aka "the crack problem"
-- calculate area of overlap for all shapes, resolve collisions in order of most overlap to least. requires calculating overlap separately from resolution, re-evaluating before each resolution?
- spot in maze starting screen near barrier where player can tunnel through diagonally

fix object drag - probably inheriting bugs from Cursor.screen_to_world :[
-- on mouse click, write dict of {obj_name:(xoff,yoff)} of offsets from mouse to each dragged object's origin
-- on mouse move, update object's loc to mouse + its offset
-- on mouse unclick, wipe object offset dict

- make sure windows and OSX builds can play sound (ie have the correct sound libs included)

- when changing art via properties editor, art doesn't update until reload
- if Framebuffer.start_crt_enabled = False but crt = True, exported image is always un-CRT'd
- image convert sometimes results in 0 alpha, see e3sky.png
- double-click in chooser should act like a confirm press
- "save as" doesn't switch to new instance properly

---

new features / major improvements:

grid for game mode? extends in all directions up to a reasonable limit

- when renaming rooms/objects, search for and correct references eg warps

"movement context" for handling movement/physics:
- move accel, max velocity, stop velocity, gravity (if not global), friction, "specific-axis" bool

game distribution system:
- ideal is something like LOVE does: single file you can associate with playscii and click to open
- possibly helpful: http://pysdl2.readthedocs.org/en/latest/modules/sdl2ext_resources.html
- if autoplay_this_game is set, create a separate CFG file and don't create playscii documents/ + cache directories
- create new project: auto-create a class file with a stub GameObject subclass?

more complete example games:
- tetris - implementation of classic, all blocks drawn into a single Art, everything else implemented in a GameHUD (and maybe some background art)

proper help screen:
- one screen of high level stuff, other screens are a generated listing of binds - use a given bind's function's __doc__ string

brushes:
- user-defined(?) ramps of characters
- painting with a brush puts down characters sampled from ramp:
-- sample randomly
-- sample based on # of tiles painted since click
-- sample based on pressure (possible with SDL2?)
- how is this data stored?  values are charset-specific

line definitions:
- user-defined(?) rules for which tile to use based on tiles painted since start of paint (click)
- probably shares some code with brushes

standard useful paint tools: draw line, flood fill

- if psci files get too huge, compress em with python's zipfile module (different extension needed?) as the json zips extraordinarily well
-- or just create a binary format that isn't broken like EDSCII's was? probably best to do once file format has stabilized
--- don't save "blank" tiles at all - determine a global/default FG/BG for majority of tiles
-- file save perf gets bad (>5s) with huge arts (eg 500x300), but pickling numpy array data is super fast - store tile data for each frame as base64-encoded strings in the json?  doesn't make files smaller tho.

general framework for importers/exporters - read scripts from eg a formats/ dir, look for subclasses of ArtImporter/ArtExporter, populate menu with em

---

fixes / minor improvements:

usablity notes from Jim:
- way to toggle a layer's visibility without selecting it - some kind of layer list?
- enlarge brush on separate axes
- copy-paste on multiple layers?
- way to see the numerical index of the current character/color (in popup?)

bugs from Jim:
- When I select text from the row at the very bottom of the document, the center of the selection is way off to the left.
- When I click to set the cursor for the text tool, moving the mouse after clicking moves the cursor, and not in a useful way.
- I keep running into this bug, difficult to reproduce, where switching tasks back to Playscii -- maybe mid-click? -- starts a continuous paint that keeps going until I click again to stop it. This paint is not added to the undo list! Either that, or it is undone internally and it sticks around as a rendering glitch. I always revert to my save, just in case.
- If you cancel a "save as," the document loses the "unsaved" asterisk and you have to change it to save

- "used" sound for consumable pickups gets immediately cut off by destroy (allow non-looping sounds to finish even if their object gets destroyed

- port ELC2 to use rooms as proof of concept for dynamically generated rooms

- weird hang when an art's palette is a non-palette file, eg cloud_ocean.jpg

generalized (works for any type of file, not just arts) file chooser:
- edit mode "set art" should invoke art file chooser
- draw a solid black char in scrollbar relative to where selection is in total item list.  clicking in scrollbar sets scroll index to there (can a button report where exactly it was clicked? just get mouse coords in screen tile space?)

detect GPUs/GL versions that won't run CRT shader well and auto-disable it in CFG?
- determine which setups would work better with this, and work out how to detect them reliably

volume support for playing sound FX
fade in/out support for music

undo/redo for adding or removing frames and layers :/

menu bar - when alt pressed, grey/darker bg on character that is an item's accelerator

main popup
- "use global settings" toggle for tools with an "affects X" mask - when true, setting one of the current tool's masks changes all tool's masks
- ability to "pin" popup so it stays on screen always
- arrow keys navigate between char and color pickers properly

- allow user to set view background color (per-art? in game world?)

shift-O: toggle between perspective and ortho views (steal unity's cool lerp)

state load / live reload: is there a way to determine when a class default has been changed and should / shouldn't override serialized data?

exporters for:
- C64 PRG file: single layer, C64 res (48x35 / 40x25) - see source of PETSCII editor http://www.kameli.net/marq/?page_id=2717 which does this
- ENDOOM (DOS charset, EGA palette)
- ASCII/ANSI art scene formats
- plain ANSI (text format)
