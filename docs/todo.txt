TODO

collision:
- broadphase!
- AABB and/or capsule shape support

generalized (works for any type of file, not just arts) file chooser:
- unify with existing ChooserDialog class, clean up as needed
- clickable GUI list with scroll arrows, allows directory traversal as well
-- filter for valid files, eg psci for art, jpg/png/bmp for image convert, ed for edscii
-- list directories first
-- sort files by name or last modified?
-- up/down arrows move up and down (like scrollbar buttons), left and right go up and into selected dir where applicable (how to tell if we're in a root?)
-- get dir list every update so FS changes show up immediately?
- text pathname field, clicking a new file in list fills it in (clicking again opens it)
-- hitting enter with a valid filename opens it, hitting enter with a valid pathname navigates list view to that dir
- thumbnail preview - cache thumbnails in a new playscii/ subdir
- text beneath thumbnail: art dimensions, layer and frame #s, charset and palette
- for non-arts (eg convert image) show image preview

fix: codepath for EDSCII loading is skipped entirely, maybe just make "Import EDSCII..." its own File menu item?

---

further work on existing features:

"save as" should create a new editable art in the session, not replace current one

status bar:
- red X stopped drawing?
- make char/fg/bg/xform items clickable to cycle forward/backward (LMB/RMB)

menu bar - when alt pressed, grey/darker bg on character that is an item's accelerator

PNG export:
- CRT off/on affects PNG output, according to a scale factor.
-- arg 1 of export console command = scale factor override, default is Nx
- fix looping / proper GIF89a status on exported GIFs

main popup
- "use global settings" toggle for tools with an "affects X" mask - when true, setting one of the current tool's masks changes all tool's masks
- ability to "pin" popup so it stays on screen always
- arrow keys navigate between char and color pickers properly

shift-O: toggle between perspective and ortho views (steal unity's cool lerp)

- if psci files get too huge, compress em with python's zipfile module (different extension needed?) as the json zips extraordinarily well
-- or just create a binary format that isn't broken like EDSCII's was? probably best to do once file format has stabilized
--- don't save "blank" tiles at all - determine a global/default FG/BG for majority of tiles

state load / live reload: is there a way to determine when a class default has been changed and should / shouldn't override serialized data?
