TODO

? why don't clicked colors ever appear?
-- *.hovered_elements is empty when clicked happens?

main popup!
- tool pane: left bar selects, right side has tool properties. just paint, grab, and erase for now; fixed 1 tile brush size
-- paint and erase tools: checkboxes for "only affect char/fg/bg"
- arrow keys navigate picker as well as mouse?
- arrange palette more intelligently: if lots of colors, arrange them into a grid a la the character set; if fewer, use multiple rows to increase click target size (eg c64 palette becomes 2-3 rows with nice large squares)
-- PaletteSwatch.min_scale - palette items are never smaller than this size (in character swatch tiles)?
--  divide # of rows resulting from this by 2, then increase tile size to create balanced rows.  eg a 16 color palette + 1 transparent color = 17 entries / 16 char tiles = 2 rows, math.ceil(17 / 2) = 9, 9 / 16 char tiles = resulting palette swatch art quad size:
rows = math.ceil(len(palette.colors) / charset.map_width)
columns = math.ceil(len(palette.colors) / rows)
palette_swatch.art.quad_width = palette_swatch.art.quad_height = (columns / charset.map_width) * charset_swatch.art.quad_width
-- test with c64 palette as well as  v small palettes (gameboy) as well as large ones (atari):

undo support:
- create an EditCommand object for every edit made (1 or more tiles, etc): timestamp, tool used, tiles affected, tile changes
- each art loaded should have its own command stack
- when undo is invoked, iterate through those objects and reverse-apply each change to the art
- when redo is invoked, do the same but in reverse order
- when an edit is made when the undo stack index is higher than its length, delete any higher items in the stack
- batch commands made with the same tool within a time window together when undoing, ie don't make the user undo each individual tile painted

- "export to PNG" feature - how? 1:1 sized offscreen render target? does getting pixels from framebuffer preserve alpha?
-- smart people say: try glReadPixels, make sure framebuffer contains an alpha (it should, pixel format is RGBA)
-- is color distortion inherent in how good CRT filters work?

ability to toggle between perspective and ortho views (steal unity's cool lerp?)

ability to "pin" popup so it stays on screen always

later UI stuff in docs/ui.txt

---

FIX:

status bar breaks when UI scale changes!

little annoying cracks between quads - UV or vert/element error?

rewrite Cursor.screen_to_world to produce same results as gluUnProject:
https://www.opengl.org/wiki/GluProject_and_gluUnProject_code
https://www.opengl.org/sdk/docs/man2/xhtml/gluUnProject.xml

low priority:

- headbrain2.ed is corrupted, figure out if it can be salvaged with smart parsing - maybe provide a "width override" option?

problem discovered during 2015-01-04~06:
GLSL really can't handle int/uint attributes!  charIndex looks fine in numpy int32 array data but comes into GLSL totally screwy.  works fine when the array and attribute are floats instead.  bug for PyOpenGL devs?
possible test program: two quads side by side, each doing some trivial shader that involves an arbitrary number, only difference being one is driven by an int attribute and the other by a float.
