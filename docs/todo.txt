TODO

collision:
- debug viz for contacts (create on contact start, destroy on contact end)
- fix player->static collisions - shouldn't jitter
- fix player->dynamicBB collisions

edit mode:
- not a full mode - basically "game mode with object(s) selected"
- concept of "selected game objects"
- left click: select object under mouse cursor
- shift left click: add object under cursor to selection
- ctrl left click: remove object under cursor from selection
- esc: deselect all objects
- floating label showing name
-- generic properties window to edit an instance's properties?
- object positioning mode/control - W/E/R for move/rotate/scale?
- "state saves" - save and reset on the fly for easy iteration and testing
-- make this its own file format so arbitrary object states can be serialized, remove current exec() way of loading games
-- saving a game state doesn't modify object definitions, but if object definitions can be reloaded every time state is reloaded, that's basically user-initiated hot reloading which ain't bad

sorting: is basing sort entirely on Y position sufficient?
- split cronotest1 scene into multiple objects if need be

---

further work on existing features:

menu bar - when alt pressed, grey/darker bg on character that is an item's accelerator

PNG export:
- CRT off/on affects PNG output, according to a scale factor.
-- arg 1 of export console command = scale factor override, default is Nx
- aniGIF export for animations - lead: http://compgroups.net/comp.lang.python/save-animated-gif-in-python-image-library/1632384

main popup
- "use global settings" toggle for tools with an "affects X" mask - when true, setting one of the current tool's masks changes all tool's masks
- ability to "pin" popup so it stays on screen always
- arrow keys navigate between char and color pickers properly

shift-O: toggle between perspective and ortho views (steal unity's cool lerp)

human-readable errors if charset/palette not found

if psci files get too huge, compress em with python's zipfile module (different extension needed?) as the json zips extraordinarily well

mockup for frame/layer matrix - is this still needed now that onion skin + layer pulldown list give a pretty good-enough view of this data?

should game dirs have their own palettes/, charsets/ etc subdirs?
