possibly-helpful links


collision:

triplefox's response:
http://pastebin.com/By7QdCcu

Metanet classics:
http://www.metanetsoftware.com/technique/tutorialA.html
http://www.metanetsoftware.com/technique/tutorialB.html

Handmade Hero has a few sections on collision: https://www.youtube.com/watch?v=_g8DLrNyVsQ

http://jonathanwhiting.com/tutorial/collision/

http://tim.hibal.org/blog/2d-character-movement/

https://github.com/pybox2d/pybox2d use Box2D just for collision? objects can be placed in "kinematic" mode and won't simulate, just collide



parallelization:

https://docs.python.org/3/library/multiprocessing.html

https://timothyawiseman.wordpress.com/2012/12/21/a-really-simple-multiprocessing-python-example/


image conversion:

http://trixter.oldskool.org/2014/06/19/8088-domination-post-mortem-part-1/

http://sol.gfxile.net/textfx

https://www.youtube.com/watch?v=L6CkYou6hYU

https://www.youtube.com/watch?v=Iqxfdw-k1OU

http://www.compuphase.com/cmetric.htm - "nonlinear RGB", faster (than Lab) color space conversion

http://www.syntacticbayleaves.com/2008/12/03/determining-image-similarity/

http://www.guguncube.com/1656/python-image-similarity-comparison-using-several-techniques

http://wiki.unity3d.com/index.php/Dithering_Shader




SDL/OpenGL resources:

http://docs.gl

https://open.gl/introduction

https://www.opengl.org/wiki/Core_Language_%28GLSL%29

http://duriansoftware.com/joe/An-intro-to-modern-OpenGL.-Table-of-Contents.html

http://sdl.beuc.net/sdl.wiki/SDL_Average_FPS_Measurement

http://www.arcsynthesis.org/gltut/Positioning/Tut05%20Optimization%20Base%20Vertex.html - specifically, use of glDrawElementsBaseVertex to draw a single layer from a renderable

https://developer.apple.com/opengl/capabilities/index.html - GL feature/version support on OSX


Tool reference:

http://ragzouken.itch.io/kooltool - 8)

http://www.aseprite.org - sprite editor with non-OS native retro-feelin' UI

http://www.warmplace.ru/soft/sunvox - unusual DAW

https://bitbucket.org/runhello/geodesic/wiki/Home - Andi's Icosa

https://github.com/andyherbert/ansiedit - cool web-based editor

http://fontstruct.com/gallery - slick looking tile-based font builder

https://github.com/abagames/mgl - kenta cho's framework

https://pypi.python.org/pypi/Compositor/ - "Morphologically Optimal ASCII Art"

http://www.kameli.net/marq/?page_id=2717 - PETSCII editor from ~2013

http://satellitesrecords.com/artists/c64.htm - C64 synthesizer created by Ryo Kawasaki

http://rexpaint.blogspot.com/p/features.html - nice featureful ascii editor, Cogmind dev


World/screen projection:

http://webglfactory.blogspot.com/2011/05/how-to-convert-world-to-screen.html

http://trac.bookofhook.com/bookofhook/trac.cgi/wiki/MousePicking

http://www.gamedev.net/topic/508784-unproject--mouse-coordinates-sdl-using-opengl/

https://www.opengl.org/discussion_boards/showthread.php/165951-Glut-Mouse-Coordinates

http://www.antongerdelan.net/opengl/raycasting.html

https://gist.github.com/LordNed/6e7d0f5069112665b6364faa32692d25

