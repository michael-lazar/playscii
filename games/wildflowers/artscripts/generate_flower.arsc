
import time, random

WIDTH, HEIGHT = 16, 16

# overall approach:
# grow multiple  "fronds" from center of top left quadrant,
# mirror these in the other three quadrants


frond_chars = [
    # thick and skinny \
    151, 166,
    # thick and skinny /
    150, 167,
    # thick and skinny X
    183, 182,
    # solid inward wedges, NW NE SE SW
    148, 149, 164, 165
]

# draw in top left quadrant; grow up and to left
grow_dirs = [
    (-1, -1),
    (-1, 0),
    (0, -1)
]

# set random seed based on date, a different flower each day
t = time.localtime()
year, month, day = t.tm_year, t.tm_mon, t.tm_mday
weekday = t.tm_wday # 0 = monday
date = year * 10000 + month * 100 + day
#random.seed(date)

self.set_charset_by_name('jpetscii')

palette = random.choice(list(PALETTE_RAMPS.keys()))
#palette = 'atari' # DEBUG for testing specific palettes
self.set_palette_by_name(palette)

self.resize(WIDTH, HEIGHT)
self.app.ui.adjust_for_art_resize(self) # grid etc
self.clear_frame_layer(0, 0)

frond_count = random.randint(2, 8)

for frond in range(frond_count):
    frond_life = random.randint(2, 8)
    # start at center
    x, y = int(WIDTH / 2) - 1, int(HEIGHT / 2) - 1
    # color ramp from palette this frond will use
    ramp_start, ramp_length, ramp_stride = random.choice(PALETTE_RAMPS[palette])
    ramp_end = ramp_start + (ramp_length * ramp_stride)
    # determine starting color, somewhere along ramp
    start_step = random.randint(0, ramp_length - 1)
    fg = ramp_start + (start_step * ramp_stride)
    # 50% chance to try a truly random character
    if random.random() < 0.5:
        char = random.choice(frond_chars)
    else:
        char = random.randint(0, 255)
    while frond_life > 0 and fg != ramp_end:
        # draw in top left
        self.set_tile_at(0, 0, x, y, char, fg)
        # mirror in other three quadrants
        top_right = (WIDTH - 1 - x, y)
        bottom_left = (x, HEIGHT - 1 - y)
        bottom_right = (WIDTH - 1 - x, HEIGHT - 1 - y)
        self.set_tile_at(0, 0, *top_right, char, fg, transform=UV_FLIPX)
        self.set_tile_at(0, 0, *bottom_left, char, fg, transform=UV_FLIPY)
        self.set_tile_at(0, 0, *bottom_right, char, fg, transform=UV_ROTATE180)
        # tick frond
        frond_life -= 1
        # shift color
        fg += ramp_stride
        # mutate char occasionally
        if random.random() < 0.2:
            char = random.choice(frond_chars)
        # grow frond
        grow_dir = random.choice(grow_dirs)
        x += grow_dir[0]
        y += grow_dir[1]
